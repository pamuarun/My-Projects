# -*- coding: utf-8 -*-
"""Yolo v9 Model Building.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rYC0ePQwx3CN6-4pN9JtO6yWJDs2TpuB
"""


from inference import get_model

# Use Roboflow demo image or your own
image = "/content/huge-stack-lots-wooden-pallets-transport-shipping-forklift-lifting-cart-pallet-truck-huge-stack-lots-wooden-211306620_jpg.rf.8b322098b510349954debd5efdca6aa8.jpg"

# Load Roboflowâ€™s YOLOv8n public model
model = get_model(model_id="my-first-project-a7fqy/9", api_key="1yES149xy1ye6aInxjo2")

results = model.infer(image)
print(results[0].image)  # Should return a URL or file path

from inference import get_model
from PIL import Image, ImageDraw, ImageFont
import matplotlib.pyplot as plt

# Load image
image_path = "/content/images (12).jpg"
image = Image.open(image_path).convert("RGB")  # ðŸ”§ Convert to RGB to avoid color errors

# Load Roboflow model
model = get_model(model_id="my-first-project-a7fqy/9", api_key="1yES149xy1ye6aInxjo2")

# Run inference
results = model.infer(image_path)
predictions = results[0].predictions

# Count predictions
print(f"\nðŸ”¢ Total pallets detected: {len(predictions)}\n")

# Setup drawing
draw = ImageDraw.Draw(image)

# Load bold, large font
try:
    font = ImageFont.truetype("DejaVuSans-Bold.ttf", size=22)
except:
    font = ImageFont.load_default()

for pred in predictions:
    x, y, w, h = pred.x, pred.y, pred.width, pred.height
    x0, y0 = x - w / 2, y - h / 2
    x1, y1 = x + w / 2, y + h / 2

    # Bounding box (red)
    draw.rectangle([x0, y0, x1, y1], outline="red", width=3)

    # Label text
    label = f"{pred.class_name} {pred.confidence:.2f}"

    # Get text size
    text_size = draw.textbbox((0, 0), label, font=font)
    text_width = text_size[2] - text_size[0]
    text_height = text_size[3] - text_size[1]

    # Draw black background for label
    draw.rectangle(
        [(x0, y0), (x0 + text_width + 6, y0 + text_height + 4)],
        fill="black"
    )

    # Draw label in white
    draw.text((x0 + 3, y0 + 2), label, fill="white", font=font)

# Show image
plt.figure(figsize=(12, 8))
plt.imshow(image)
plt.axis('off')
plt.show()

